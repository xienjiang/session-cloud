<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>

    <http pattern="/**/ping" security="none"></http>
    <http pattern="/**/static/*" security="none"></http>


    <http pattern="/fuwu/b/oauth2/token" create-session="stateless" authentication-manager-ref="oauth2AuthenticationManager"
          entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="false">
        <intercept-url pattern="/fuwu/b/oauth2/token" access="IS_AUTHENTICATED_FULLY" requires-channel="any"/>
        <anonymous enabled="true"/>
        <http-basic entry-point-ref="oauth2AuthenticationEntryPoint"/>

        <custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER"/>
        <access-denied-handler ref="oauth2AccessDeniedHandler"/>
    </http>

    <!--api http configuration-->
    <http pattern="/api/**" create-session="never" entry-point-ref="oauth2AuthenticationEntryPoint"
          access-decision-manager-ref="oauth2AccessDecisionManager" use-expressions="false" >
        <anonymous enabled="false"/>

        <!--         <intercept-url pattern="/api/**" access="ROLE_API,SCOPE_DEFAULT"/> -->
        <!--         <custom-filter ref="apiResourceServer" before="PRE_AUTH_FILTER"/> -->
        <access-denied-handler ref="oauth2AccessDeniedHandler"/>
    </http>

    <beans:bean id="clientCredentialsTokenEndpointFilter"
                class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <beans:property name="authenticationManager" ref="oauth2AuthenticationManager"/>
    </beans:bean>


    <!-- api resource server filter-->
    <oauth2:resource-server id="apiResourceServer" resource-id="api" token-services-ref="tokenServices"/>

    <beans:bean id="clientDetailsService" class="com.springcloud.session.oauth2.service.CustomJdbcClientDetailsService">
        <beans:constructor-arg index="0" ref="dataSource"/>
    </beans:bean>


    <!--Config token services-->
    <beans:bean id="tokenStore" class="com.springcloud.session.oauth2.service.token.CustomTokenStore">
        <beans:constructor-arg index="0" ref="dataSource"/>
    </beans:bean>

    <beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <beans:property name="tokenStore" ref="tokenStore"/>
        <beans:property name="clientDetailsService" ref="clientDetailsService"/>
        <beans:property name="supportRefreshToken" value="true"/>
        <beans:property name="accessTokenValiditySeconds" value="7200"/>
        <beans:property name="tokenEnhancer" ref="tokenEnhancerChainFilter"/>
    </beans:bean>

    <global-method-security pre-post-annotations="enabled" proxy-target-class="true">
        <expression-handler ref="oauth2ExpressionHandler"/>
    </global-method-security>

    <oauth2:expression-handler id="oauth2ExpressionHandler"/>
    <oauth2:web-expression-handler id="oauth2WebExpressionHandler"/>


    <beans:bean id="oauthUserApprovalHandler" class="org.springframework.security.oauth2.provider.approval.DefaultUserApprovalHandler">
    </beans:bean>

    <beans:bean id="jdbcAuthorizationCodeServices"
                class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
        <beans:constructor-arg index="0" ref="dataSource"/>
    </beans:bean>


    <oauth2:authorization-server client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
                                 user-approval-handler-ref="oauthUserApprovalHandler"
                                 error-page="oauth_error"
                                 authorization-endpoint-url="/fuwu/b/oauth2/authorize"
                                 token-endpoint-url="/fuwu/b/oauth2/token" >
        <oauth2:authorization-code authorization-code-services-ref="jdbcAuthorizationCodeServices"/>
        <!--         <oauth2:implicit/> -->
        <oauth2:refresh-token/>
        <!--         <oauth2:client-credentials/> -->
        <!--         <oauth2:password/> -->
    </oauth2:authorization-server>


    <beans:bean id="oauth2AuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" >
        <beans:property name="typeName" value="Basic"/>
        <beans:property name="exceptionRenderer" ref="customExceptionRender" />
        <beans:property name="exceptionTranslator" ref="customOauthResponseExceptionTranslator" />
    </beans:bean>


    <beans:bean id="oauth2ClientDetailsUserService"
                class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <beans:constructor-arg ref="clientDetailsService"/>
    </beans:bean>

    <authentication-manager id="oauth2AuthenticationManager">
        <authentication-provider user-service-ref="oauth2ClientDetailsUserService"/>
    </authentication-manager>

    <beans:bean id="oauth2AccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter"/>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>


    <beans:bean id="oauth2AccessDeniedHandler"
                class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
        <beans:property name="exceptionRenderer" ref="customExceptionRender" />
        <beans:property name="exceptionTranslator" ref="customOauthResponseExceptionTranslator" />
    </beans:bean>


    <http disable-url-rewriting="true" use-expressions="false" entry-point-ref="loginUrlAuthenticationEntryPoint"
          authentication-manager-ref="authenticationManager">
        <intercept-url pattern="/**/b/**/authorize" access="ROLE_API" requires-channel="any"/>
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>

        <form-login authentication-failure-url="/login.jsp?error=1"
                    login-page="/login.jsp"  username-parameter="userName" password-parameter="password" authentication-success-handler-ref="customAuthenticationSuccessHandler"/>
        <logout logout-success-url="/login.jsp" logout-url="/logout.do" />
        <access-denied-handler error-page="/login.jsp?error=2"/>
        <custom-filter ref="preAuthorizationFilter" before="PRE_AUTH_FILTER"/>

        <anonymous/>
    </http>

    <beans:bean id="loginUrlAuthenticationEntryPoint" class="com.springcloud.session.oauth2.endpoint.CustomLoginUrlAuthenticationEntryPoint">
        <beans:property name="useForward" value="false" />
        <beans:property name="loginFormUrl" value="login.jsp" />
    </beans:bean>


    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="customAuthenticationProvider"/>
    </authentication-manager>

</beans:beans>